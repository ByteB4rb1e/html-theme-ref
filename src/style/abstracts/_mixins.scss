@use 'sass:math';

@mixin font($family, $src, $weight: normal, $style: normal) {
    @font-face {
        font-display: auto;
        font-family: $family;
        font-style: $style;
        font-weight: $weight;
        src: url('#{$src}.woff2') format('woff2'), url('#{$src}.woff') format('woff');
    }
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

$map-for-positions: (
  "top": at top,
  "top-right": at top right,
  "right": at right,
  "bottom-right": at bottom right,
  "bottom": at bottom,
  "bottom-left": at bottom left,
  "left": at left,
  "top-left": at top left,
  "center": at center,
) !default;

@mixin radial-gradient($shape, $position, $colors) {
  $list: ();
  $shape: unquote($shape);
  $position: unquote($position);
  @for $i from 1 through length($colors) {
    $list: append($list, nth($colors, $i), comma);
  }
  @if map-has-key($map-for-positions, $position) {
    background: radial-gradient(
      $shape map-get($map-for-positions, $position),
      $list
    );
  } @else if not map-has-key($map-for-positions, $position) {
    background: radial-gradient($shape $position, $list);
  }
}

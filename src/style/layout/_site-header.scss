@use 'sass:math' as math;
@use '../abstracts/variables/spacings' as spacings;
@use '../abstracts/variables/layout' as layout;
@use '../components/site-header' as component;

.site-header {
    // CSS variables for dynamic spacing, since using em unit
    --icon-width: #{component.$icon-size};
    --icon-height: #{component.$icon-size};
    --icon-container-horizontal-spacing: calc(var(--icon-width)/2);
    --icon-container-vertical-spacing: calc(var(--icon-height)/2);
    --icon-container-width: calc(
        var(--icon-width) + 
        var(--icon-container-horizontal-spacing) * 2
    );
    --icon-container-height: calc(
        var(--icon-height) +
        var(--icon-container-vertical-spacing) * 2
    );

    > details.panel,
    > details.panel > summary > details.options {
        position: relative;

        &:not([open]) {
            max-height: 0;
        }

        & > summary::before, form::before {
            line-height: 1;
            padding: calc(var(--icon-container-vertical-spacing)/2)
                     calc(var(--icon-container-horizontal-spacing)/2);
            position: absolute;
            right: 0;
            top: 0;
            z-index: 1;
        }

        > summary {
            height: var(--icon-container-height);
            position: relative;
        }
    }

    > details.panel {

        > summary {
            align-items: center;
            justify-content: space-between;
            line-height: 1;
        }

        > summary > details.options {
            &[open] > summary > form.search input.search-input {
                float: none;
                width: 100%;
            }

            > summary {
                margin-right: var(--icon-container-width);
                padding-right: var(--icon-container-width);

                > form.search {
                    position: relative;
                    height: var(--icon-container-height);
                    display: block;

                    input.search-input {
                        border: none;
                        box-sizing: border-box;
                        float:right;
                        height: var(--icon-container-height);
                        padding: 0;
                        vertical-align: top;
                        width: var(--icon-container-width);
                        position: relative;
                        z-index: 1;

                        &:focus {
                            float: none;
                            width: 100%;
                        }
                    }
                }
            }
        }

        a.brand {
            display: flex;
            flex-direction: column;
            flex-shrink: 0;
            padding: var(--icon-container-vertical-spacing)
                     spacings.$sidebar-item-horizontal;
            position: relative;

            > .brand-text {
                overflow-wrap: break-word;
            }
        }
    }
}
